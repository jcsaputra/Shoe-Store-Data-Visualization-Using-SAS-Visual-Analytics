/*---------------------------------------------------------
  The options statement below should be placed
  before the data step when submitting this code.
---------------------------------------------------------*/
options VALIDMEMNAME=EXTEND VALIDVARNAME=ANY;
   /*------------------------------------------
   Generated SAS Scoring Code
     Date             : 30May2024:06:30:18
     Locale           : en_US
     Model Type       : Neural Network
     Interval variable: Total Sales
     Interval variable: Price per Unit
     Interval variable: Units Sold
     Class variable   : Product
     Response variable: Product
     ------------------------------------------*/
   /*---------------------------------------------------------

   SAS Code Generated by Cloud Analytic Services for Artificial Neural Network

     Date                  : 30May2024:10:30:18 UTC
     Response variable      : Product
     Number of nodes        : 19
     Number of input nodes  : 3

     Number of output nodes : 6
     Number of hidden nodes : 10
     Number of hidden layers: 1
     Type of neural nets    : MLP

     ---------------------------------------------------------*/

   length _strfmt_ $25; drop _strfmt_;
   _strfmt_ = ' ';

   array _tlevname_1967_{6} $25 _temporary_ ( 'Men''s Athletic Footwear' 
   'Women''s Apparel' 
   'Women''s Athletic Footwear' 

   'Women''s Street Footwear' 
   'Men''s Street Footwear' 
   'Men''s Apparel');

   length I_Product $25;

   array _node_val_1967_{19} _temporary_; 

   _badval_ = 0;
   _dropinput_ =                    1;
   _drop_ =                    1;

   /* set input node values */


   _numval_ = 'Total Sales'n;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_1967; 
   end;
   _tval_ =                 8250;

   _sumval_ =                    0;
   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_1967_{1} = _numval_*_dropinput_;

   _numval_ = 'Price per Unit'n;
   if missing(_numval_) then do;
      _badval_ = 1; goto skip_1967; 
   end;
   _tval_ =                  103;

   _sumval_ =                    7;
   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_1967_{2} = _numval_*_dropinput_;
   _numval_ = 'Units Sold'n;

   if missing(_numval_) then do;
      _badval_ = 1; goto skip_1967; 
   end;
   _tval_ =                  128;
   _sumval_ =                    0;

   _numval_ = 2.0*(_numval_-_sumval_)/_tval_ - 1.0;
   _node_val_1967_{3} = _numval_*_dropinput_;


   /* Forward Propagation of Net 0 */

   _sumval_ = 0.0;


   /* Combination for Node 3 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -0.10655832595538;
   _nval_ = _node_val_1967_{1};

   _tval_ = _nval_ *    -0.06374663671885;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{2};

   _tval_ = _nval_ *    -0.14230715314941;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *    -0.13525325301093;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 3 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{4} = _numval_*_drop_;

   /* Combination for Node 4 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.00747249007227;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *    -0.03249643205499;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *    -0.48830860908733;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *     0.24974390676765;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 4 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{5} = _numval_*_drop_;

   /* Combination for Node 5 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.25859372576771;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *    -0.11618770271733;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *    -0.34660567869021;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *    -0.19234528798477;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 5 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{6} = _numval_*_drop_;

   /* Combination for Node 6 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.08247196657165;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *    -0.02901457052264;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *    -0.01147651684518;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *     -0.0835315754381;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 6 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{7} = _numval_*_drop_;

   /* Combination for Node 7 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     -0.2312985099955;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *    -0.10956222025637;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *     -0.1772604273328;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *    -0.29006656764628;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 7 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{8} = _numval_*_drop_;

   /* Combination for Node 8 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.21164452572637;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *     0.08586202185723;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *    -0.09393505358238;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *     0.40500346716549;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 8 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{9} = _numval_*_drop_;

   /* Combination for Node 9 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.15226340598716;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *     0.07025950903533;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *    -0.10504241095912;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *     0.35478433802981;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 9 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{10} = _numval_*_drop_;

   /* Combination for Node 10 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =    -0.02948651381795;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *    -0.05267322593972;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *     0.04588041360642;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *    -0.22072409288444;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 10 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{11} = _numval_*_drop_;

   /* Combination for Node 11 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.02116133284662;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *     0.04535614767853;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *     0.54261115276177;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *    -0.22480119826987;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 11 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{12} = _numval_*_drop_;

   /* Combination for Node 12 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.06561778579693;
   _nval_ = _node_val_1967_{1};
   _tval_ = _nval_ *    -0.00194603247758;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{2};
   _tval_ = _nval_ *    -0.44248874378396;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{3};

   _tval_ = _nval_ *      0.3533778638348;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 12 */

   _tval_ = 2.0*_numval_;

   if (_tval_ gt     704.782712893384) then do;
      _numval_ = 1.0;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   else do;
      _tval_ = exp(_tval_);

      _numval_ = 1.0-2.0/(1.0+_tval_);
   end;
   _node_val_1967_{13} = _numval_*_drop_;

   /* Combination for Node 13 */

   _numval_ = 0.0;
   _tval_   = 0.0;

   _bias_   =     0.01398276608404;
   _nval_ = _node_val_1967_{4};
   _tval_ = _nval_ *    -0.00013079148281;
   _numval_ + _tval_;

   _nval_ = _node_val_1967_{5};
   _tval_ = _nval_ *     0.08858914365723;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{6};

   _tval_ = _nval_ *     0.02875405493244;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{7};

   _tval_ = _nval_ *    -0.00747412066282;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{8};

   _tval_ = _nval_ *    -0.00096981948182;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{9};

   _tval_ = _nval_ *     0.05237291322387;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{10};

   _tval_ = _nval_ *     0.05311081552181;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{11};

   _tval_ = _nval_ *     -0.0260266442249;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{12};

   _tval_ = _nval_ *    -0.09385646144557;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{13};

   _tval_ = _nval_ *     0.09454357572504;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 13 */

   _tval_ = _numval_;

   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   _sumval_ + _numval_;
   _node_val_1967_{14} = _numval_;


   /* Combination for Node 14 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =     0.03580843356597;
   _nval_ = _node_val_1967_{4};

   _tval_ = _nval_ *    -0.11029893491706;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{5};

   _tval_ = _nval_ *    -0.27895909798294;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{6};

   _tval_ = _nval_ *    -0.25598637228599;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{7};

   _tval_ = _nval_ *    -0.02011956651739;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{8};

   _tval_ = _nval_ *    -0.16164777611527;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{9};

   _tval_ = _nval_ *      0.0016050930755;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{10};

   _tval_ = _nval_ *    -0.01624742407933;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{11};

   _tval_ = _nval_ *    -0.00397497780393;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{12};

   _tval_ = _nval_ *     0.31665047419415;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{13};

   _tval_ = _nval_ *     -0.2301340304313;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 14 */

   _tval_ = _numval_;

   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   _sumval_ + _numval_;
   _node_val_1967_{15} = _numval_;


   /* Combination for Node 15 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -0.07374304637688;
   _nval_ = _node_val_1967_{4};

   _tval_ = _nval_ *     0.12400941162846;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{5};

   _tval_ = _nval_ *     0.09405422705467;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{6};

   _tval_ = _nval_ *     0.23339573281957;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{7};

   _tval_ = _nval_ *     0.04458248701534;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{8};

   _tval_ = _nval_ *     0.20705338376364;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{9};

   _tval_ = _nval_ *    -0.15060804424403;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{10};

   _tval_ = _nval_ *    -0.12667908105223;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{11};

   _tval_ = _nval_ *     0.08423006798993;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{12};

   _tval_ = _nval_ *    -0.12869033273487;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{13};

   _tval_ = _nval_ *     0.02054984674372;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 15 */

   _tval_ = _numval_;

   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   _sumval_ + _numval_;
   _node_val_1967_{16} = _numval_;


   /* Combination for Node 16 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -0.02403748105285;
   _nval_ = _node_val_1967_{4};

   _tval_ = _nval_ *     0.08332360938276;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{5};

   _tval_ = _nval_ *     0.21113507357417;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{6};

   _tval_ = _nval_ *     0.19836546608971;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{7};

   _tval_ = _nval_ *     0.01700175596205;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{8};

   _tval_ = _nval_ *     0.12558301676338;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{9};

   _tval_ = _nval_ *    -0.00305664348213;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{10};

   _tval_ = _nval_ *     0.01271867774809;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{11};

   _tval_ = _nval_ *     0.00522920545256;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{12};

   _tval_ = _nval_ *    -0.24048130809636;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{13};

   _tval_ = _nval_ *     0.17775713576894;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 16 */

   _tval_ = _numval_;

   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   _sumval_ + _numval_;
   _node_val_1967_{17} = _numval_;


   /* Combination for Node 17 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =     0.10563721974075;
   _nval_ = _node_val_1967_{4};

   _tval_ = _nval_ *    -0.09625605417633;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{5};

   _tval_ = _nval_ *     0.23229879149402;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{6};

   _tval_ = _nval_ *    -0.13737094088399;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{7};

   _tval_ = _nval_ *    -0.06901734194648;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{8};

   _tval_ = _nval_ *       -0.22796620285;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{9};

   _tval_ = _nval_ *     0.33382123102929;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{10};

   _tval_ = _nval_ *     0.29028141253256;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{11};

   _tval_ = _nval_ *    -0.18177321450386;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{12};

   _tval_ = _nval_ *    -0.21647016130635;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{13};

   _tval_ = _nval_ *     0.31480001926388;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 17 */

   _tval_ = _numval_;

   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   _sumval_ + _numval_;
   _node_val_1967_{18} = _numval_;


   /* Combination for Node 18 */

   _numval_ = 0.0;
   _tval_   = 0.0;
   _bias_   =    -0.05764789196104;
   _nval_ = _node_val_1967_{4};

   _tval_ = _nval_ *    -0.00130004841223;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{5};

   _tval_ = _nval_ *    -0.34676193367625;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{6};

   _tval_ = _nval_ *    -0.06657826632816;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{7};

   _tval_ = _nval_ *     0.03464612297141;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{8};

   _tval_ = _nval_ *     0.05856958263983;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{9};

   _tval_ = _nval_ *    -0.23464735843828;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{10};

   _tval_ = _nval_ *    -0.21218261970936;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{11};

   _tval_ = _nval_ *     0.12262708918879;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{12};

   _tval_ = _nval_ *     0.36317051570439;
   _numval_ + _tval_;
   _nval_ = _node_val_1967_{13};

   _tval_ = _nval_ *     -0.3788321800244;
   _numval_ + _tval_;
   _numval_ + _bias_;

   /* Activation for Node 18 */

   _tval_ = _numval_;

   if (_tval_ ge     704.782712893384) then do;
      _tval_ =     704.782712893384;
   end;

   else if (_tval_ lt         -708.3964185) then do;
      _tval_ = 0.0;
   end;
   else do;
      _tval_ = exp(_tval_);
   end;
   _numval_ = _tval_;
   _sumval_ + _numval_;
   _node_val_1967_{19} = _numval_;
   _numval_ = _node_val_1967_{14};

   _numval_ = _numval_ / _sumval_;
   _node_val_1967_{14} = _numval_;
   _numval_ = _node_val_1967_{15};
   _numval_ = _numval_ / _sumval_;
   _node_val_1967_{15} = _numval_;
   _numval_ = _node_val_1967_{16};

   _numval_ = _numval_ / _sumval_;
   _node_val_1967_{16} = _numval_;
   _numval_ = _node_val_1967_{17};
   _numval_ = _numval_ / _sumval_;
   _node_val_1967_{17} = _numval_;
   _numval_ = _node_val_1967_{18};

   _numval_ = _numval_ / _sumval_;
   _node_val_1967_{18} = _numval_;
   _numval_ = _node_val_1967_{19};
   _numval_ = _numval_ / _sumval_;
   _node_val_1967_{19} = _numval_;
   skip_1967:

   if (_badval_ eq 1) then do;
      P_ProductMen_s_Athletic_Footwear = .;
      P_ProductWomen_s_Apparel = .;

      P_ProductWomen_s_Athletic_Footwe = .;
      P_ProductWomen_s_Street_Footwear = .;
      P_ProductMen_s_Street_Footwear = .;

      P_ProductMen_s_Apparel = .;
      I_Product = ' ';
      _NN_PredP = .  ;
   end;
   else do;
      _nn_pred_lev_ = -1;
      _NN_PredP = 0.0;

      _numval_ = _node_val_1967_{14};

      P_ProductMen_s_Athletic_Footwear = _node_val_1967_{14};
      if (_numval_ gt _NN_PredP) then do;
         _NN_PredP = _numval_;
         _nn_pred_lev_ = 1;
      end;

      _numval_ = _node_val_1967_{15};
      P_ProductWomen_s_Apparel = _node_val_1967_{15};

      if (_numval_ gt _NN_PredP) then do;
         _NN_PredP = _numval_;
         _nn_pred_lev_ = 2;
      end;

      _numval_ = _node_val_1967_{16};

      P_ProductWomen_s_Athletic_Footwe = _node_val_1967_{16};
      if (_numval_ gt _NN_PredP) then do;
         _NN_PredP = _numval_;
         _nn_pred_lev_ = 3;
      end;

      _numval_ = _node_val_1967_{17};

      P_ProductWomen_s_Street_Footwear = _node_val_1967_{17};
      if (_numval_ gt _NN_PredP) then do;
         _NN_PredP = _numval_;
         _nn_pred_lev_ = 4;
      end;

      _numval_ = _node_val_1967_{18};

      P_ProductMen_s_Street_Footwear = _node_val_1967_{18};
      if (_numval_ gt _NN_PredP) then do;
         _NN_PredP = _numval_;
         _nn_pred_lev_ = 5;
      end;

      _numval_ = _node_val_1967_{19};
      P_ProductMen_s_Apparel = _node_val_1967_{19};
      if (_numval_ gt _NN_PredP) then do;
         _NN_PredP = _numval_;

         _nn_pred_lev_ = 6;
      end;
      I_Product = _tlevname_1967_{_nn_pred_lev_};
   end;
   label I_Product = 'Into: Product';

   label P_ProductMen_s_Athletic_Footwear = 'Predicted: Product=Men''s Athletic Footwear  ';

   label P_ProductWomen_s_Apparel = 'Predicted: Product=Women''s Apparel          ';

   label P_ProductWomen_s_Athletic_Footwe = 'Predicted: Product=Women''s Athletic Footwear';

   label P_ProductWomen_s_Street_Footwear = 'Predicted: Product=Women''s Street Footwear  ';

   label P_ProductMen_s_Street_Footwear = 'Predicted: Product=Men''s Street Footwear    ';

   label P_ProductMen_s_Apparel = 'Predicted: Product=Men''s Apparel            ';

   drop _numval_;
   drop _sumval_;
   drop _bias_;
   drop _tval_;
   drop _nval_;
   drop _badval_;
   drop _drop_;

   drop _dropinput_;
   drop _nn_pred_lev_;
   drop _NN_PredP;
   /*------------------------------------------*/
   /*_VA_DROP*/ drop 'I_Product'n 'P_ProductMen_s_Apparel'n 'P_ProductMen_s_Athletic_Footwear'n 'P_ProductMen_s_Street_Footwear'n 'P_ProductWomen_s_Apparel'n 'P_ProductWomen_s_Athletic_Footwe'n 'P_ProductWomen_s_Street_Footwear'n;
length 'I_Product_1967'n $25;
      'I_Product_1967'n='I_Product'n;
'P_ProductMen_s_Apparel_1967'n='P_ProductMen_s_Apparel'n;
'P_ProductMen_s_Athletic_F_1967'n='P_ProductMen_s_Athletic_Footwear'n;
'P_ProductMen_s_Street_Foo_1967'n='P_ProductMen_s_Street_Footwear'n;
'P_ProductWomen_s_Apparel_1967'n='P_ProductWomen_s_Apparel'n;
'P_ProductWomen_s_Athletic_1967'n='P_ProductWomen_s_Athletic_Footwe'n;
'P_ProductWomen_s_Street_F_1967'n='P_ProductWomen_s_Street_Footwear'n;
   /*------------------------------------------*/